<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.kxm.kcgl.mapper.PriceMapper">
	
   	<resultMap id="price" type="com.kxm.kcgl.domain.Price">
		<result property="id" column="ID" jdbcType="DECIMAL" />
		<result property="productId" column="product_id" jdbcType="DECIMAL" />
		<result property="productNo" column="product_no" jdbcType="VARCHAR" />
		<result property="productName" column="product_name" jdbcType="VARCHAR" />
		<result property="brandId" column="brand_id" jdbcType="DECIMAL" />
		<result property="brandName" column="brand_name" jdbcType="VARCHAR" />
		<result property="techId" column="tech_id" jdbcType="DECIMAL" />
		<result property="techName" column="tech_name" jdbcType="VARCHAR" />
		<result property="thicknessId" column="thickness_id" jdbcType="DECIMAL" />
		<result property="thicknessName" column="thickness_name" jdbcType="VARCHAR" />
		<result property="quantityId" column="quantity_id" jdbcType="DECIMAL" />
		<result property="quantityName" column="quantity_name" jdbcType="VARCHAR" />
		<result property="price" column="price" jdbcType="DECIMAL" />
		<result property="avgSalePrice" column="avg_sale_price" jdbcType="DECIMAL" />
	</resultMap>
	
	<insert id="insert" parameterType="com.kxm.kcgl.domain.Price">
		INSERT INTO T_PRICE (
			product_id,
			quantity_id,
			price
		)
		VALUES (
			#{productId},
			#{quantityId},
			#{price}
		)
	</insert>
	
	<update id="update" parameterType="com.kxm.kcgl.domain.Price">
		update t_price set price = #{price}
		<include refid="condition" />			
	</update>
	
	<select id="countBySelective" resultType="int">
		SELECT count(*) from t_price
		<include refid="condition" />
	</select>
	
	<select id="selectSelective" resultMap="price">
		SELECT
			product.id,product.brand_id,brand.name brand_name ,
			product.product_no,product.product_name,tech.id tech_id,tech.name tech_name,
			thickness.id thickness_id,thickness.name thickness_name,
			quantity.id quantity_id,quantity.name quantity_name,
			price.price,
			(
				SELECT AVG(price)
				FROM t_product_out productOut
				WHERE productOut.product_id = price.product_id AND productOut.quantity_id = price.quantity_id
			) avg_sale_price
		FROM t_price price
		LEFT JOIN t_product product ON price.product_id = product.id
		LEFT JOIN t_brand brand ON product.brand_id = brand.id
		LEFT JOIN t_tech tech ON product.tech_id = tech.id
		LEFT JOIN t_thickness thickness ON product.thickness_id = thickness.id
		LEFT JOIN t_quantity quantity ON price.quantity_id = quantity.id
		<include refid="condition" />
		order by product.create_time desc
	</select>
	
	<sql id="condition">
	    <where>
			<if test="productId != null">
				and product_id = #{productId}	    
			</if>
			<if test="quantityId != null">
				and quantity_id = #{quantityId}	    
			</if>
			<if test="productNo != null">
				and product.product_no = #{productNo}	    
			</if>
	    </where>
	</sql>
</mapper>

