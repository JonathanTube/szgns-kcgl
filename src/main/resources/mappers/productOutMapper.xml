<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.kxm.kcgl.mapper.ProductOutMapper">

	<resultMap id="ProductOut" type="com.kxm.kcgl.domain.ProductOut">
		<result property="id" column="ID" jdbcType="DECIMAL" />
		<result property="brandId" column="brand_id" jdbcType="DECIMAL" />
		<result property="brandName" column="brand_name" jdbcType="VARCHAR" />
		<result property="productId" column="product_id" jdbcType="DECIMAL" />
		<result property="productNo" column="product_no" jdbcType="VARCHAR" />
		<result property="productName" column="product_name" jdbcType="VARCHAR" />
		<result property="techId" column="tech_id" jdbcType="DECIMAL" />
		<result property="techName" column="tech_name" jdbcType="VARCHAR" />
		<result property="thicknessId" column="thickness_id" jdbcType="DECIMAL" />
		<result property="thicknessName" column="thickness_name" jdbcType="VARCHAR" />
		<result property="amount" column="amount" jdbcType="DECIMAL" />
		<result property="stockAmount" column="stock_amount" jdbcType="DECIMAL" />
		<result property="price" column="price" jdbcType="DECIMAL" />
		<result property="stockPrice" column="stock_price" jdbcType="DECIMAL" />
		<result property="money" column="money" jdbcType="DECIMAL" />
		<result property="manufactorId" column="manufactor_id" jdbcType="DECIMAL" />
		<result property="manufactorName" column="manufactor_name" jdbcType="VARCHAR" />
		<result property="identifyType" column="identify_type" jdbcType="VARCHAR" />
		<result property="identifyId" column="identify_id" jdbcType="DECIMAL" />
		<result property="identifyName" column="identify_name" jdbcType="VARCHAR" />
		<result property="billId" column="billId" jdbcType="DECIMAL" />
		<result property="custId" column="cust_id" jdbcType="DECIMAL" />
		<result property="custName" column="cust_name" jdbcType="VARCHAR" />
		<result property="createUserId" column="create_user_id" jdbcType="DECIMAL" />
		<result property="createUserName" column="create_username" jdbcType="VARCHAR" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
	</resultMap>

	<insert id="insert" parameterType="com.kxm.kcgl.domain.ProductOut">
		INSERT INTO T_PRODUCT_OUT (
			bill_id,
			product_id,
			price,
			stock_price;
			amount,
			money,
			create_user_id
		) VALUES (
			#{billId},
			#{productId},
			#{price},
			#{stockPrice},
			#{amount},
			#{money},
			#{createUserId}
		)
	</insert>

	<delete id="deleteByPk" parameterType="int">
	    <![CDATA[
	        DELETE FROM T_PRODUCT_OUT WHERE ID = #{id} 
	    ]]>
	</delete>

	<select id="selectSelective" resultMap="ProductOut">
		SELECT
				productOut.id,brand.id brand_id,brand.name brand_name,product.id
				product_id,product.product_no,product.product_name,tech.id
				tech_id,tech.name tech_name,thickness.id thickness_id,thickness.name
				thickness_name,productOut.amount,productOut.stock_price,productOut.price,
				user.id create_user_id,user.username create_username,productOut.create_time,
				stock.identify_type,productOut.bill_id,identify.id identify_id,identify.name identify_name,
				productOut.money
		FROM t_product_out productOut
		LEFT JOIN t_product product ON productOut.product_id = product.id
		LEFT JOIN t_brand brand ON product.brand_id = brand.id
		LEFT JOIN t_tech tech ON product.tech_id = tech.id
		LEFT JOIN t_thickness thickness ON product.thickness_id = thickness.id
		LEFT JOIN t_user USER ON productOut.create_user_id = user.id
		LEFT JOIN t_stock stock ON stock.product_id = productOut.product_id
		LEFT JOIN t_identify identify ON identify.id = stock.identify_id
		<include refid="condition" />
	</select>

	<select id="countBySelective" resultType="int">
		SELECT count(*)
		FROM t_product_out productOut
		LEFT JOIN t_product product ON productOut.product_id = product.id
		LEFT JOIN t_brand brand ON product.brand_id = brand.id
		LEFT JOIN t_tech tech ON product.tech_id = tech.id
		LEFT JOIN t_thickness thickness ON product.thickness_id = thickness.id
		LEFT JOIN t_user USER ON productOut.create_user_id = user.id
		LEFT JOIN t_stock stock ON stock.product_id = productOut.product_id
		LEFT JOIN t_identify identify ON identify.id = stock.identify_id
		<include refid="condition" />
	</select>
	
	<sql id="condition">
		<where>
		    <if test="billId !=null">
				productOut.bill_id = #{billId}		        
		    </if>
		</where>	    
	</sql>
</mapper>

